const axios = require("axios");

module.exports = {
  config: {
    name: "isha",
    version: "1.3",
    author: "Siam",
    role: 0,
    shortDescription: "Simsimi AI Chat with Multiple API Support",
    longDescription: "Chat with Simsimi using multiple fallback APIs",
    category: "chat",
    guide: "{pn} [‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ]"
  },

  onStart: async function ({ api, event, args }) {
    const userMessage = args.join(" ");
    if (!userMessage) {
      return api.sendMessage("üü° ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®, ‡¶Ø‡ßá‡¶Æ‡¶®: simi tumi kemon acho", event.threadID);
    }

    // üîÅ ‡¶Ø‡¶§ ‡¶ñ‡ßÅ‡¶∂‡¶ø API ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
    const apiList = [
      {
        name: "API 1",
        url: "https://wsapi.simsimi.com/190410/talk",
        key: "qLgGvYtiTZzDrZsa7hRUQu1KNgytykDDSUY1ljt4"
      },
      {
        name: "API 2",
        url: "https://wsapi.simsimi.com/190410/talk",
        key: "MFG6haCvsB8fp9~qPYq8QiIrjhZHbe3fd8tvoHnn"
      },
      {
        name: "API 3",
        url: "https://your-third-api-url.com/talk", // üëà ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶®‡¶§‡ßÅ‡¶® API URL ‡¶¶‡¶ø‡¶®
        key: "your-third-api-key"
      },
      // ‡¶Ü‡¶∞‡¶ì ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®
    ];

    let lastError = null;

    for (const currentApi of apiList) {
      try {
        const res = await axios.post(currentApi.url,
          {
            utext: userMessage,
            lang: "bn"
          },
          {
            headers: {
              "Content-Type": "application/json",
              "x-api-key": currentApi.key
            }
          }
        );

        const reply = res.data.atext || "‚ùì ‡¶ï‡ßã‡¶®‡ßã ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§";
        return api.sendMessage(`ü§ñ ${currentApi.name}:\n${reply}`, event.threadID);
      } catch (err) {
        lastError = err;
        console.warn(`‚ö†Ô∏è ${currentApi.name} ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá:`, err.response?.data || err.message);
        // ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ API ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶¨
      }
    }

    // ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã API ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶≤‡ßá
    return api.sendMessage("‚ùå ‡¶∏‡¶¨ API ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡ßü‡ßá‡¶õ‡ßá:\n" + (lastError?.response?.data?.msg || "‡¶Ö‡¶ú‡¶æ‡¶®‡¶æ ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø"), event.threadID);
  }
};