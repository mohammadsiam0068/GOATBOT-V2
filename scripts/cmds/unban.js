const fs = require("fs");
const path = require("path");

const dataDir = path.join(__dirname, "..", "data");
const banPath = path.join(dataDir, "bannedUsers.json");
const warnPath = path.join(dataDir, "warnData.json");

// ЁЯФБ ржбрзЗржЯрж╛ рж▓рзЛржб
let bannedUsers = fs.existsSync(banPath) ? new Set(JSON.parse(fs.readFileSync(banPath))) : new Set();
let warnData = fs.existsSync(warnPath) ? JSON.parse(fs.readFileSync(warnPath)) : {};

// ЁЯФГ рж╕рзЗржн ржлрж╛ржВрж╢ржи
function save() {
  fs.writeFileSync(banPath, JSON.stringify([...bannedUsers], null, 2));
  fs.writeFileSync(warnPath, JSON.stringify(warnData, null, 2));
}

module.exports = {
  config: {
    name: "unban",
    version: "1.0",
    author: "Siam",
    role: 0, // рж╕ржмрж╛рж░ ржЬржирзНржп, ржЪрзЗржХ ржирж┐ржЪрзЗ рж╣ржмрзЗ
    shortDescription: "ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржмрзНржпрж╛ржи ржерзЗржХрзЗ ржорзБржХрзНржд ржХрж░рзБржи",
    longDescription: "ржмржЯ ржорж╛рж▓рж┐ржХ ржУ ржЧрзНрж░рзБржк ржПржбржорж┐ржи ржмрзНржпрж╛ржи ржЖржирж▓ржХ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи",
    category: "admin",
    guide: "{pn} [uid]"
  },

  onStart: async function ({ args, api, event }) {
    const { senderID, threadID, messageID } = event;
    const uid = args[0];

    if (!uid || isNaN(uid)) {
      return api.sendMessage("тЪая╕П рж╕ржарж┐ржХ UID ржжрж┐ржиред\nржЙржжрж╛рж╣рж░ржг: /unban 1000123456789", threadID, messageID);
    }

    // тЬЕ ржмржЯ ржЕрзНржпрж╛ржбржорж┐ржи UID
    const botAdmins = ["100044530383890"]; // тЖР тЖР рждрзЛржорж╛рж░ UID ржмрж╕рж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ

    // тЬЕ ржЧрзНрж░рзБржк ржПржбржорж┐ржи ржЪрзЗржХ
    let isGroupAdmin = false;
    try {
      const threadInfo = await api.getThreadInfo(threadID);
      isGroupAdmin = threadInfo.adminIDs.some(admin => admin.id === senderID);
    } catch (e) {
      console.log("тД╣я╕П ржЧрзНрж░рзБржк ржПржбржорж┐ржи ржЪрзЗржХ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛:", e.message);
    }

    const isBotAdmin = botAdmins.includes(senderID);

    if (!isBotAdmin && !isGroupAdmin) {
      return api.sendMessage("тЫФ рж╢рзБржзрзБ ржмржЯ ржЕрзНржпрж╛ржбржорж┐ржи ржЕржержмрж╛ ржЧрзНрж░рзБржк ржПржбржорж┐ржи ржЖржиржмрзНржпрж╛ржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред", threadID, messageID);
    }

    if (!bannedUsers.has(uid)) {
      return api.sendMessage("тД╣я╕П ржПржЗ UID ржмрзНржпрж╛ржи рждрж╛рж▓рж┐ржХрж╛рзЯ ржирзЗржЗред", threadID, messageID);
    }

    // тЬЕ ржЖржиржмрзНржпрж╛ржи ржПржмржВ warn ржбрж┐рж▓рж┐ржЯ
    bannedUsers.delete(uid);
    delete warnData[uid];
    save();

    return api.sendMessage(`тЬЕ UID ${uid} рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржиржмрзНржпрж╛ржи ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржПржмржВ ржУрзЯрж╛рж░рзНржи ржбрзЗржЯрж╛ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╣рзЯрзЗржЫрзЗред`, threadID, messageID);
  }
};